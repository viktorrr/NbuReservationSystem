@using System.Web.Mvc.Html
@using NbuReservationSystem.Web.App_GlobalResources.Reservations
@using NbuReservationSystem.Web.Extensions
@using NbuReservationSystem.Web.Models.Enums
@using Labels = Resources.Labels
@model NbuReservationSystem.Web.Models.Requests.Reservations.ReservationViewModel
@{
    ViewBag.Title = "title";
}

<div class="container">
    <div class="row">
        <div class="col-md-28">
            @{
                if (this.ViewBag.RequestSucceeded != null)
                {
                    if (this.ViewBag.RequestSucceeded)
                    {
                        <p class="alert alert-danger" role="alert">@Labels.RequestFailed</p>
                    }
                    else
                    {
                        <p class="alert alert-success" role="alert">@Labels.RequestSucceeded</p>
                    }
                }
            }

            <div class="row text-center">
                <h1>@Labels.NewReservation</h1>
            </div>

            @Html.ValidationSummary(true)

            @using (Html.BeginForm("New", "Reservations", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <h3>@Labels.ReservationDetails</h3>
                <hr />

                <div class="form-group">
                    @Html.LabelFor(x => x.Title, Labels.Title, new { @class = "control-label col-md-4" })
                    <div class="col-md-24">
                        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Title)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Description, Labels.Description, new { @class = "control-label col-md-4" })
                    <div class="col-md-24">
                        @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Description)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Date, Labels.Date, new { @class = "control-label col-md-4" })
                    <div class="col-md-24">
                        <div class='input-group date' id="new-reservation-date">
                            @Html.TextBoxFor(x => x.Date, new { @class = "form-control" })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        <p>
                            @Html.ValidationMessageFor(x => x.Date)
                        </p>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.StartHour, Labels.BeginsOn, new { @class = "control-label col-md-4" })
                    <div class="col-md-24">
                        <div class='input-group date' id="new-reservation-begins-on">
                            @Html.TextBoxFor(x => x.StartHour, new { @class = "form-control" })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-time"></span>
                            </span>
                        </div>
                        <p>
                            @Html.ValidationMessageFor(x => x.StartHour)
                        </p>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.EndHour, Labels.EndsOn, new { @class = "control-label col-md-4" })
                    <div class="col-md-24">
                        <div class='input-group date' id="new-reservation-ends-on">
                            @Html.TextBoxFor(x => x.EndHour, new { @class = "form-control" })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-time"></span>
                            </span>
                        </div>
                        <p>
                            @Html.ValidationMessageFor(x => x.EndHour)
                        </p>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Assignor, Labels.Assignor, new { @class = "control-label col-md-4" })
                    <div class="col-md-24">
                        @Html.TextBoxFor(x => x.Assignor, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Assignor)
                    </div>
                </div>

                <div class="col-md-28">
                    <div class="form-group">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(x => x.IsEquipmentRequired)
                                @Html.LabelFor(x => x.IsEquipmentRequired, Labels.IsEquipmentRequired)
                            </label>
                        </div>
                    </div>
                </div>

                <h3>@Labels.PointOfContact</h3>
                <hr />

                <div class="form-group">
                    @Html.LabelFor(x => x.Organizer.Name, Labels.Name, new { @class = "control-label col-md-4" })
                    <div class="col-md-24">
                        @Html.TextBoxFor(x => x.Organizer.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Organizer.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Organizer.Email, Labels.Email, new { @class = "control-label col-md-4" })
                    <div class="col-md-24">
                        @Html.TextBoxFor(x => x.Organizer.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Organizer.Email)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Organizer.PhoneNumber, Labels.PhoneNumber, new { @class = "control-label col-md-4" })
                    <div class="col-md-24">
                        @Html.TextBoxFor(x => x.Organizer.PhoneNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Organizer.PhoneNumber)
                    </div>
                </div>

                <h3 id="repetition-policy">
                    @Labels.RepetitionPolicy <span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span>
                </h3>
                <hr />

                <div id="repetition-policy-container">
                    <div class="form-group">
                        @Html.LabelFor(x => x.RepetitionPolicy.RepetitionWindow, Labels.RepetitionWindow, new { @class = "control-label col-md-4" })
                        <div class="col-md-24">
                            @Html.TextBoxFor(x => x.RepetitionPolicy.RepetitionWindow, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.RepetitionPolicy.RepetitionWindow, ErrorMessages.PositiveNumberIsRequired)
                        </div>
                    </div>

                    <div class="form-group">
                        @{
                            var days = Enum.GetValues(typeof(Day));
                            for (int i = 0; i < days.Length; i++)
                            {
                                <label class="col-xs-14 col-sm-7 col-md-4">
                                    @Html.CheckBoxFor(x => Model.RepetitionPolicy.RepetitionDays[i])
                                    @Html.LabelFor(x => x.RepetitionPolicy.RepetitionDays[i], Html.FormatLocalizedDay(days.GetValue(i)))
                                </label>
                            }
                        }
                    </div>

                    <div class="form-group">
                        @Html.RadioButtonFor(x => x.RepetitionPolicy.RepetitionType, RepetitionType.OneTimeOnly, new { @class = "control-label col-md-1" })
                        @Html.Label(Labels.OneTimeOnly, new { @class = "control-label col-md-3" })
                    </div>

                    <div class="form-group">
                        @Html.RadioButtonFor(x => x.RepetitionPolicy.RepetitionType, RepetitionType.Forever, new { @class = "control-label col-md-1" })
                        @Html.Label(Labels.Forever, new { @class = "control-label col-md-3" })
                    </div>

                    <div class="form-group">
                        @Html.RadioButtonFor(x => x.RepetitionPolicy.RepetitionType, RepetitionType.EndAfterExactNumberOfRepetitions, new { @class = "control-label col-md-1" })
                        @Html.LabelFor(x => x.RepetitionPolicy.Repetitions, Labels.RepetitionsCount, new { @class = "control-label col-md-3" })
                        <div class="col-md-24">
                            @Html.TextBoxFor(x => x.RepetitionPolicy.Repetitions, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.RepetitionPolicy.Repetitions, ErrorMessages.PositiveNumberIsRequired)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.RadioButtonFor(x => x.RepetitionPolicy.RepetitionType, RepetitionType.EndOnSpecificDate, new { @class = "control-label col-md-1" })
                        @Html.LabelFor(x => x.RepetitionPolicy.EndDate, Labels.EndDate, new { @class = "control-label col-md-3" })
                        <div class="col-md-24">
                            <div class='input-group date' id="end-date">
                                @Html.TextBoxFor(x => x.RepetitionPolicy.EndDate, new { @class = "form-control" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        <input type="submit" value="@Labels.Save" class="btn btn-default" />
                        <input type="reset" value="@Labels.Clear" class="btn btn-default" />
                    </div>
                </div>
                            }
        </div>

    </div>
</div>

@section scripts {
    <script>
        $(document)
            .ready(function () {
                var calendarSettings = {
                    format: 'YYYY-MM-DD',
                    locale: 'bg',
                    minDate: moment(moment().utc().add(2, 'h')),
                    date: null
                };
                var timeSettings = {
                    format: 'HH:mm',
                    locale: 'bg'
                };

                //  prepare the date pickers
                $('#new-reservation-date').datetimepicker(calendarSettings);
                $('#end-date').datetimepicker(calendarSettings);

                // prepare the time pickers
                $('#new-reservation-begins-on').datetimepicker(timeSettings);
                $('#new-reservation-ends-on').datetimepicker(timeSettings);

                // show/hide the repetition policy on click
                var isRepetitionPolicyHidden = false,
                    $container = $('#repetition-policy-container');

                $container.hide();

                $('#repetition-policy')
                    .click(function () {
                        if (isRepetitionPolicyHidden) {
                            $container.hide();
                        } else {
                            $container.fadeIn('slow');
                        }

                        isRepetitionPolicyHidden = !isRepetitionPolicyHidden;
                    });

                // when the labels are clicked, mark the given checkbox
                $('#repetition-policy-container > div.row label.col-md-3')
                    .toArray()
                    .forEach(function (label) {
                        var $label = $(label);

                        $label.click(function () {
                            $label.prev().prop('checked', true);
                        });
                    });

                // when then inputs are clicked, select the checkbox...
                // TODO: this is the most ugliest fix ever! fix it!!!
                $('#repetition-policy-container > div.row label.col-md-3')
                    .parent()
                    .find('.form-control')
                    .toArray()
                    .forEach(function (input) {
                        var $input = $(input);

                        $input.click(function () {
                            $input.parent().parent().find('label').click();
                            $input.parent().parent().parent().find('label').click();
                        });
                    });
            });

        // by default - mark one-time-only
        $('#RepetitionPolicy_RepetitionType').prop('checked', true);
    </script>
}
